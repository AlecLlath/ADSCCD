/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: earth_mars.proto */

#ifndef PROTOBUF_C_earth_5fmars_2eproto__INCLUDED
#define PROTOBUF_C_earth_5fmars_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003000 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Date Date;
typedef struct _Astronaut Astronaut;
typedef struct _RescueDemand RescueDemand;
typedef struct _RescueAck RescueAck;
typedef struct _FromMars FromMars;
typedef struct _RescueOffer RescueOffer;
typedef struct _FromEarth FromEarth;


/* --- enums --- */

typedef enum _Astronaut__HealthStatus {
  ASTRONAUT__HEALTH_STATUS__GOOD = 0,
  ASTRONAUT__HEALTH_STATUS__AILING = 1,
  ASTRONAUT__HEALTH_STATUS__DEAD = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(ASTRONAUT__HEALTH_STATUS)
} Astronaut__HealthStatus;
typedef enum _RescueAck__RescueAckChoice {
  RESCUE_ACK__RESCUE_ACK_CHOICE__REJECTED = 0,
  RESCUE_ACK__RESCUE_ACK_CHOICE__ACCEPTED = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(RESCUE_ACK__RESCUE_ACK_CHOICE)
} RescueAck__RescueAckChoice;

/* --- messages --- */

struct  _Date
{
  ProtobufCMessage base;
  uint32_t year;
  uint32_t month;
  uint32_t day;
};
#define DATE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&date__descriptor) \
    , 0, 0, 0 }


struct  _Astronaut
{
  ProtobufCMessage base;
  char *name;
  Astronaut__HealthStatus health_status;
};
#define ASTRONAUT__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&astronaut__descriptor) \
    , (char *)protobuf_c_empty_string, ASTRONAUT__HEALTH_STATUS__GOOD }


struct  _RescueDemand
{
  ProtobufCMessage base;
  uint32_t id;
  Date *ask_before;
  size_t n_astronaut;
  Astronaut **astronaut;
};
#define RESCUE_DEMAND__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rescue_demand__descriptor) \
    , 0, NULL, 0,NULL }


struct  _RescueAck
{
  ProtobufCMessage base;
  uint32_t id;
  RescueAck__RescueAckChoice choice;
};
#define RESCUE_ACK__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rescue_ack__descriptor) \
    , 0, RESCUE_ACK__RESCUE_ACK_CHOICE__REJECTED }


typedef enum {
  FROM_MARS__TYPE__NOT_SET = 0,
  FROM_MARS__TYPE_RESCUE_DEMAND = 1,
  FROM_MARS__TYPE_RESCUE_ACK = 2
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FROM_MARS__TYPE)
} FromMars__TypeCase;

struct  _FromMars
{
  ProtobufCMessage base;
  FromMars__TypeCase type_case;
  union {
    RescueDemand *rescue_demand;
    RescueAck *rescue_ack;
  };
};
#define FROM_MARS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&from_mars__descriptor) \
    , FROM_MARS__TYPE__NOT_SET, {0} }


struct  _RescueOffer
{
  ProtobufCMessage base;
  uint32_t id;
  Date *date;
  uint32_t nb_places;
};
#define RESCUE_OFFER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&rescue_offer__descriptor) \
    , 0, NULL, 0 }


typedef enum {
  FROM_EARTH__TYPE__NOT_SET = 0,
  FROM_EARTH__TYPE_RESCUE_OFFER = 1
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(FROM_EARTH__TYPE)
} FromEarth__TypeCase;

struct  _FromEarth
{
  ProtobufCMessage base;
  FromEarth__TypeCase type_case;
  union {
    RescueOffer *rescue_offer;
  };
};
#define FROM_EARTH__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&from_earth__descriptor) \
    , FROM_EARTH__TYPE__NOT_SET, {0} }


/* Date methods */
void   date__init
                     (Date         *message);
size_t date__get_packed_size
                     (const Date   *message);
size_t date__pack
                     (const Date   *message,
                      uint8_t             *out);
size_t date__pack_to_buffer
                     (const Date   *message,
                      ProtobufCBuffer     *buffer);
Date *
       date__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   date__free_unpacked
                     (Date *message,
                      ProtobufCAllocator *allocator);
/* Astronaut methods */
void   astronaut__init
                     (Astronaut         *message);
size_t astronaut__get_packed_size
                     (const Astronaut   *message);
size_t astronaut__pack
                     (const Astronaut   *message,
                      uint8_t             *out);
size_t astronaut__pack_to_buffer
                     (const Astronaut   *message,
                      ProtobufCBuffer     *buffer);
Astronaut *
       astronaut__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   astronaut__free_unpacked
                     (Astronaut *message,
                      ProtobufCAllocator *allocator);
/* RescueDemand methods */
void   rescue_demand__init
                     (RescueDemand         *message);
size_t rescue_demand__get_packed_size
                     (const RescueDemand   *message);
size_t rescue_demand__pack
                     (const RescueDemand   *message,
                      uint8_t             *out);
size_t rescue_demand__pack_to_buffer
                     (const RescueDemand   *message,
                      ProtobufCBuffer     *buffer);
RescueDemand *
       rescue_demand__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rescue_demand__free_unpacked
                     (RescueDemand *message,
                      ProtobufCAllocator *allocator);
/* RescueAck methods */
void   rescue_ack__init
                     (RescueAck         *message);
size_t rescue_ack__get_packed_size
                     (const RescueAck   *message);
size_t rescue_ack__pack
                     (const RescueAck   *message,
                      uint8_t             *out);
size_t rescue_ack__pack_to_buffer
                     (const RescueAck   *message,
                      ProtobufCBuffer     *buffer);
RescueAck *
       rescue_ack__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rescue_ack__free_unpacked
                     (RescueAck *message,
                      ProtobufCAllocator *allocator);
/* FromMars methods */
void   from_mars__init
                     (FromMars         *message);
size_t from_mars__get_packed_size
                     (const FromMars   *message);
size_t from_mars__pack
                     (const FromMars   *message,
                      uint8_t             *out);
size_t from_mars__pack_to_buffer
                     (const FromMars   *message,
                      ProtobufCBuffer     *buffer);
FromMars *
       from_mars__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   from_mars__free_unpacked
                     (FromMars *message,
                      ProtobufCAllocator *allocator);
/* RescueOffer methods */
void   rescue_offer__init
                     (RescueOffer         *message);
size_t rescue_offer__get_packed_size
                     (const RescueOffer   *message);
size_t rescue_offer__pack
                     (const RescueOffer   *message,
                      uint8_t             *out);
size_t rescue_offer__pack_to_buffer
                     (const RescueOffer   *message,
                      ProtobufCBuffer     *buffer);
RescueOffer *
       rescue_offer__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   rescue_offer__free_unpacked
                     (RescueOffer *message,
                      ProtobufCAllocator *allocator);
/* FromEarth methods */
void   from_earth__init
                     (FromEarth         *message);
size_t from_earth__get_packed_size
                     (const FromEarth   *message);
size_t from_earth__pack
                     (const FromEarth   *message,
                      uint8_t             *out);
size_t from_earth__pack_to_buffer
                     (const FromEarth   *message,
                      ProtobufCBuffer     *buffer);
FromEarth *
       from_earth__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   from_earth__free_unpacked
                     (FromEarth *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Date_Closure)
                 (const Date *message,
                  void *closure_data);
typedef void (*Astronaut_Closure)
                 (const Astronaut *message,
                  void *closure_data);
typedef void (*RescueDemand_Closure)
                 (const RescueDemand *message,
                  void *closure_data);
typedef void (*RescueAck_Closure)
                 (const RescueAck *message,
                  void *closure_data);
typedef void (*FromMars_Closure)
                 (const FromMars *message,
                  void *closure_data);
typedef void (*RescueOffer_Closure)
                 (const RescueOffer *message,
                  void *closure_data);
typedef void (*FromEarth_Closure)
                 (const FromEarth *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor date__descriptor;
extern const ProtobufCMessageDescriptor astronaut__descriptor;
extern const ProtobufCEnumDescriptor    astronaut__health_status__descriptor;
extern const ProtobufCMessageDescriptor rescue_demand__descriptor;
extern const ProtobufCMessageDescriptor rescue_ack__descriptor;
extern const ProtobufCEnumDescriptor    rescue_ack__rescue_ack_choice__descriptor;
extern const ProtobufCMessageDescriptor from_mars__descriptor;
extern const ProtobufCMessageDescriptor rescue_offer__descriptor;
extern const ProtobufCMessageDescriptor from_earth__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_earth_5fmars_2eproto__INCLUDED */
